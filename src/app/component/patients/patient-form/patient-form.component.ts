import { Component, inject } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatCardModule } from '@angular/material/card';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatRadioModule } from '@angular/material/radio';
import { MatSelectModule } from '@angular/material/select';
import { Router } from '@angular/router';
import { Patient } from '../../../models/patient';
import { PatientService } from '../../../services/patients/patient.service';

@Component({
  selector: 'app-add-patient',
  standalone: true,
  imports: [
    MatButtonModule,
    MatCardModule,
    MatInputModule,
    MatFormFieldModule,
    MatIconModule,
    MatProgressSpinnerModule,
    MatRadioModule,
    MatSelectModule,
    FormsModule,
    CommonModule,
  ],
  templateUrl: './patient-form.component.html',
  styleUrls: ['./patient-form.component.css'],
})
export class AddPatientComponent {
  patient: Patient = { // Initialize an empty patient object
    patientId: '', // Will be generated by the backend
    name: '',
    cin: '',
    age: null,
    gender: '',
    phone: '',
    email: '',
    status: 'active', // Default status
    disease: '',
    insurance: '',
    documents: [],
    medicalHistory: [],
    dateJoined: new Date(),
  };
  isLoading: boolean = false;
  errorMessage: string = '';
  newDocument: string = '';
  newMedicalHistory: string = '';

  private router = inject(Router);
  private patientService = inject(PatientService);

  addDocument(): void {
    if (this.newDocument) {
      this.patient.documents = [...(this.patient.documents ?? []), this.newDocument];
      this.newDocument = '';
    }
  }

  addMedicalHistory(): void {
    if (this.newMedicalHistory) {
      this.patient.medicalHistory = [...(this.patient.medicalHistory??[]), this.newMedicalHistory];
      this.newMedicalHistory = '';
    }
  }

  savePatient(): void {
    this.isLoading = true;
    this.patient.dateJoined = new Date(); // Set the current date here
    this.patientService.addPatient(this.patient).subscribe({
      next: (response) => {
        this.isLoading = false;
        console.log('Patient added successfully:', response);
        // Optionally navigate to the patient list or show a success message
        this.router.navigate(['/patients']);
      },
      error: (error) => {
        this.isLoading = false;
        this.errorMessage = 'Error adding patient.';
        console.error('Error adding patient:', error);
        // Show an error message to the user
      },
    });
  }

  cancel(): void {
    this.router.navigate(['/patients']);
  }
}